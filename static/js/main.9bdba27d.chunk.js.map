{"version":3,"sources":["components/start.jsx","util.js","components/Game.jsx","components/stars.jsx","components/PopUp.jsx","Routes.js","index.js"],"names":["Start","className","style","display","to","getColors","num","Block","blockStyle","background","color","height","width","margin","justifyContent","alignItems","fontSize","fontWeight","newGameButton","padding","borderRadius","cursor","textAlign","tryAgainButton","marginTop","gameOverOverlay","position","left","top","Game","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","useState","data","setData","localStorage","getItem","score","setScore","best","setBest","gameOver","setGameOver","addNumber","newGrid","added","gridFull","attempts","rand1","Math","floor","random","rand2","checkIfGameOver","alert","swipeLeft","dummy","count","oldGrid","newArray","cloneDeep","i","b","slow","fast","JSON","stringify","setItem","swipeRight","oldData","length","swipeDown","parse","swipeUp","checker","checker2","checker3","checker4","resetGame","emptyGrid","useEffect","s","console","log","func","initialize","event","handler","passive","window","addEventListener","removeEventListener","useEvent","keyCode","includes","fontFamily","flex","marginLeft","onClick","overflowY","map","row","oneIndex","digit","index","makeStyles","theme","root","breakpoints","down","flexDirection","images","Stars","src","alt","textDecoration","Routes","AOS","init","offset","delay","duration","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9bdba27d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../start.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"inner-container\">\r\n        <div className=\"shape\">\r\n          <div className=\"title\">\r\n            <h2>WITH ❤ BY ENIGMA TEAM</h2>\r\n            <div style={{display:\"flex\"}}>\r\n            <Link to=\"/about\" className=\"button\">\r\n              {\" \"}\r\n              INSTRUCTIONS\r\n            </Link>\r\n            <Link to=\"/game\" className=\"button\">\r\n              {\" \"}\r\n              START\r\n            </Link>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Start;\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    // initiate the event handler\r\n    window.addEventListener(event, handler, passive);\r\n\r\n    // this will clean up the event every time the component is re-rendered\r\n    return function cleanup() {\r\n      window.removeEventListener(event, handler);\r\n    };\r\n  });\r\n};\r\n\r\nexport const getColors = (num) => {\r\n  switch (num) {\r\n    case 2:\r\n      return \"#EBDCD0\";\r\n    case 4:\r\n      return \"#E9DBBA\";\r\n    case 8:\r\n      return \"#E9A067\";\r\n    case 16:\r\n      return \"#F08151\";\r\n    case 32:\r\n      return \"#F2654F\";\r\n    case 64:\r\n      return \"#F1462C\";\r\n    case 128:\r\n      return \"#E7C65E\";\r\n    case 256:\r\n      return \"#E8C350\";\r\n    case 512:\r\n      return \"#E8BE40\";\r\n    case 1024:\r\n      return \"#E8BB31\";\r\n    case 2048:\r\n      return \"#E7B723\";\r\n    default:\r\n      return \"#C2B3A3\";\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport { useEvent, getColors } from \"../util\";\r\nimport Swipe from \"react-easy-swipe\";\r\nimport \"./game.css\";\r\n// import Score from \"./components/score\";\r\n\r\nfunction Game() {\r\n  const UP_ARROW = 38;\r\n  const DOWN_ARROW = 40;\r\n  const LEFT_ARROW = 37;\r\n  const RIGHT_ARROW = 39;\r\n  const [data, setData] = useState([\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0]\r\n  ]);\r\n  let [score, setScore] = useState(() => {\r\n    return(localStorage.getItem(\"score\") || 0);\r\n  });\r\n  let [best, setBest] = useState(() => {\r\n    return (localStorage.getItem(\"best\") || 0);\r\n  });\r\n\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  // Initialize\r\n  const func = () => {\r\n    let arr = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0]\r\n    ];\r\n    let s = JSON.parse(localStorage.getItem(\"grid\"));\r\n    if (!s) {\r\n      s = arr;\r\n    }\r\n    return s;\r\n  };\r\n\r\n  const initialize = () => {\r\n    // console.log(\"CALLING INITIALIZE\");\r\n    let newGrid = cloneDeep(data);\r\n    // console.log(newGrid);\r\n    setScore(0);\r\n    addNumber(newGrid);\r\n    // console.table(newGrid);\r\n    addNumber(newGrid);\r\n    // console.table(newGrid);\r\n  };\r\n\r\n  // AddNumber - Add an item\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    let gridFull = false;\r\n    let attempts = 0;\r\n    while (!added) {\r\n      if (gridFull) {\r\n        break;\r\n      }\r\n\r\n      let rand1 = Math.floor(Math.random() * 4);\r\n      let rand2 = Math.floor(Math.random() * 4);\r\n      attempts++;\r\n      if (newGrid[rand1][rand2] === 0) {\r\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\r\n        added = true;\r\n      }\r\n      if (attempts > 50) {\r\n        gridFull = true;\r\n        let gameOverr = checkIfGameOver();\r\n        if (gameOverr) {\r\n          alert(\"game over\");\r\n        }\r\n      }\r\n    }\r\n    // setData(newGrid);\r\n    // localStorage.setItem(\"grid\", JSON.stringify(newGrid));\r\n  };\r\n  // Swipe Left\r\n  const swipeLeft = (dummy) => {\r\n    // console.log(\"swipe left\");\r\n    let count = 0;\r\n    let oldGrid = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            count += b[slow];\r\n            b[fast] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n    if (dummy) {\r\n      return newArray;\r\n    }\r\n    setScore((score = +score +  count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(newArray));\r\n    setData(newArray);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeRight = (dummy) => {\r\n    // console.log(\"swipe right\");\r\n    let count = 0;\r\n    let oldData = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    for (let i = 3; i >= 0; i--) {\r\n      let b = newArray[i];\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            count += b[slow];\r\n            b[fast] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\r\n      addNumber(newArray);\r\n    }\r\n    if (dummy) {\r\n      return newArray;\r\n    }\r\n    setScore((score = +score +  count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(newArray));\r\n    setData(newArray);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeDown = (dummy) => {\r\n    // console.log(\"swipe down\");\r\n    // console.log(data);\r\n    let count = 0;\r\n    let b = cloneDeep(data);\r\n    let oldData = JSON.parse(JSON.stringify(data));\r\n    for (let i = 3; i >= 0; i--) {\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            count += b[slow][i];\r\n            b[fast][i] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\r\n      addNumber(b);\r\n    }\r\n    if (dummy) return b;\r\n    setScore((score = +score +  count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(b));\r\n    setData(b);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeUp = (dummy) => {\r\n    let count = 0;\r\n    let b = cloneDeep(data);\r\n    let oldData = data;\r\n    for (let i = 0; i < 4; i++) {\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            count += b[slow][i];\r\n            // console.log(count);\r\n            b[fast][i] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\r\n      addNumber(b);\r\n    }\r\n    if (dummy) {\r\n      return b;\r\n    }\r\n    setScore((score = +score +  count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(b));\r\n    setData(b);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  // Check Gameover\r\n  const checkIfGameOver = () => {\r\n    // console.log(\"CHECKING GAME OVER\");\r\n    // let original = cloneDeep(data);\r\n    let checker = swipeLeft(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker)) {\r\n      return false;\r\n    }\r\n\r\n    let checker2 = swipeDown(true);\r\n    // console.log(\"CHECKER DOWN\");\r\n    // console.table(data);\r\n    // console.table(checker2);\r\n    if (JSON.stringify(data) !== JSON.stringify(checker2)) {\r\n      return false;\r\n    }\r\n\r\n    let checker3 = swipeRight(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker3)) {\r\n      return false;\r\n    }\r\n\r\n    let checker4 = swipeUp(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker4)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n  // Reset\r\n  const resetGame = () => {\r\n    setGameOver(false);\r\n    const emptyGrid = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0]\r\n    ];\r\n    setScore(0);\r\n    setData(emptyGrid);\r\n    addNumber(emptyGrid);\r\n    addNumber(emptyGrid);\r\n    setData(emptyGrid);\r\n    localStorage.setItem(\"score\", 0);\r\n    localStorage.setItem(\"grid\", JSON.stringify(emptyGrid));\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (gameOver) {\r\n      return;\r\n    }\r\n    console.log(event.keyCode);\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        // alert(\"up\");\r\n        console.log(event.keyCode, \"up\");\r\n        swipeUp();\r\n        // console.table(data);\r\n        break;\r\n      case DOWN_ARROW:\r\n        // console.table(data);\r\n        console.log(event.keyCode, \"down\");\r\n        swipeDown();\r\n        // console.table(data);\r\n        break;\r\n      case LEFT_ARROW:\r\n        console.log(event.keyCode, \"left\");\r\n        // console.table(data);\r\n        swipeLeft();\r\n        // console.table(data);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        console.log(event.keyCode, \"right\");\r\n        // console.table(data);\r\n        swipeRight();\r\n        // console.table(data);\r\n        break;\r\n      default:\r\n        console.log(\"def\");\r\n        break;\r\n    }\r\n\r\n    if (\r\n      [RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW].includes(event.keyCode)\r\n    ) {\r\n      let gameOverr = checkIfGameOver();\r\n      if (gameOverr) {\r\n        setGameOver(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let s = JSON.parse(localStorage.getItem(\"grid\"));\r\n    console.log(s);\r\n    if (!s) {\r\n      console.log(\"init\");\r\n      initialize();\r\n    } else {\r\n      console.log(\"func\", s);\r\n      setData(func());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  // This is a custom function\r\n  useEvent(\"keydown\", handleKeyDown);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div\r\n        style={{\r\n          width: 345,\r\n          margin: \"auto\",\r\n          marginTop: 30\r\n        }}\r\n      >\r\n        <div style={{ display: \"flex\" }}>\r\n          <div\r\n            style={{\r\n              fontFamily: \"sans-serif\",\r\n              flex: 1,\r\n              fontWeight: \"700\",\r\n              fontSize: 60,\r\n              color: \"#776e65\"\r\n            }}\r\n          >\r\n            2048\r\n          </div>\r\n          <div\r\n            className=\"score-container\"\r\n            style={{\r\n              marginLeft: \"100px\"\r\n            }}\r\n          >\r\n            {score}\r\n          </div>\r\n          <div\r\n            className=\"best-container\"\r\n            style={{\r\n              marginLeft: \"20px\"\r\n            }}\r\n          >\r\n            {best}\r\n          </div>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n              marginTop: \"auto\"\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div\r\n          style={{\r\n            background: \"#AD9D8F\",\r\n            width: \"max-content\",\r\n            height: \"max-content\",\r\n            margin: \"auto\",\r\n            padding: 5,\r\n            borderRadius: 5,\r\n            marginTop: 10,\r\n            position: \"relative\"\r\n          }}\r\n        >\r\n          {gameOver && (\r\n            <div style={style.gameOverOverlay}>\r\n              <div>\r\n                <div\r\n                  style={{\r\n                    fontSize: 30,\r\n                    fontFamily: \"sans-serif\",\r\n                    fontWeight: \"900\",\r\n                    color: \"#776E65\"\r\n                  }}\r\n                >\r\n                  Game Over\r\n                </div>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      flex: 1,\r\n                      marginTop: \"auto\"\r\n                    }}\r\n                  >\r\n                    <div onClick={resetGame} style={style.tryAgainButton}>\r\n                      Try Again\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Swipe\r\n            // onSwipeDown={() => {\r\n            //   swipeDown();\r\n            // }}\r\n            // onSwipeLeft={() => swipeLeft()}\r\n            // onSwipeRight={() => swipeRight()}\r\n            // onSwipeUp={() => swipeUp()}\r\n            style={{ overflowY: \"hidden\" }}\r\n          >\r\n            {data.map((row, oneIndex) => {\r\n              return (\r\n                <div style={{ display: \"flex\" }} key={oneIndex}>\r\n                  {row.map((digit, index) => (\r\n                    <Block num={digit} key={index} />\r\n                  ))}\r\n                </div>\r\n              );\r\n            })}\r\n          </Swipe>\r\n        </div>\r\n\r\n        <div style={{ width: \"inherit\" }}>\r\n          <p className=\"game-explanation\">\r\n            <strong className=\"important\">How to play:</strong> Use your{\" \"}\r\n            <strong>arrow keys</strong> to move the tiles. When two tiles with\r\n            the same number touch, they <strong>merge into one!</strong>\r\n          </p>\r\n        </div>\r\n        <div onClick={resetGame} style={style.newGameButton}>\r\n          NEW GAME\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Block = ({ num }) => {\r\n  const { blockStyle } = style;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...blockStyle,\r\n        background: getColors(num),\r\n        color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\"\r\n      }}\r\n    >\r\n      {num !== 0 ? num : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  blockStyle: {\r\n    height: 80,\r\n    width: 80,\r\n    background: \"lightgray\",\r\n    margin: 3,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: 45,\r\n    fontWeight: \"800\",\r\n    color: \"white\"\r\n  },\r\n  newGameButton: {\r\n    padding: 10,\r\n    background: \"#846F5B\",\r\n    color: \"#F8F5F0\",\r\n    width: 95,\r\n    borderRadius: 7,\r\n    fontWeight: \"900\",\r\n    cursor: \"pointer\",\r\n    textAlign: \"center\",\r\n    margin: \"auto\"\r\n  },\r\n  tryAgainButton: {\r\n    padding: 10,\r\n    background: \"#846F5B\",\r\n    color: \"#F8F5F0\",\r\n    width: 80,\r\n    borderRadius: 7,\r\n    fontWeight: \"900\",\r\n    cursor: \"pointer\",\r\n    margin: \"auto\",\r\n    marginTop: 20\r\n  },\r\n  gameOverOverlay: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    left: 0,\r\n    top: 0,\r\n    borderRadius: 5,\r\n    background: \"rgba(238,228,218,.5)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nexport default Game;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Details from \"./Details\";\r\nimport PopUp from \"./PopUp\";\r\nimport \"./stars.css\";\r\n\r\nconst data = [\r\n  \"Swipe the screen up, down, left, or right to move all number tiles in that direction. Each tile moves in that direction until it hits the wall or another tile.(Use your arrow keys in the computer version).Each time you make a move, a new 2 or 4 tile appears in an empty spot in a row or column that was moved last move.\",\r\n  \"Try to get to 2048. When a move causes two tiles of the same number to hit each other, they merge into one tile with a value equal to the sum of the two tiles. For instance, two 2 tiles combine into a 4. The goal is to create a tile with a value of 2048.\",\r\n  \"Pause and look ahead. It's easy to get sucked into the game and make moves as quickly as possible. If you want a better shot at winning, fight this impulse and only make a move when you're ready. Look ahead and try to imagine how the board will look after you make the next move, or at least what will happen to a few important tiles.\",\r\n  \"Focus on a corner. A common strategy among players is to build up a high number in one corner. It doesn't matter what corner you pick, but once you pick, stick with it.This tactic works best when the corner is part of a row you keep permanently filled. This lets you move the tiles left to right without dislodging your high-value tile.\",\r\n  \"Take opportunities to merge multiple tiles. If you see a long row of similar tiles, it's usually a good idea to combine them all and give yourself more room on the board.Combine the early tiles into a 16 or 32, and put it in a corner. The goal of this method is to keep this tile in place for as long as possible, gradually building it higher and higher\",\r\n  \"Try alternate tapping up and right. One basic approach is to alternate tapping up and right until no squares are moving. Tap left when this happens, then go back to alternating up and right. This won't guarantee you a win - in fact, it usually won't get you there. However, it can get you a fairly high score, and it's a quick way to try to beat your previous record.\",\r\n];\r\n\r\nconst images = [\r\n  \"https://www.wikihow.com/images/thumb/9/99/Beat-2048-Step-8-Version-5.jpg/aid4511727-v4-728px-Beat-2048-Step-8-Version-5.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/e/ef/Beat-2048-Step-9-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-9-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/0/09/Beat-2048-Step-10-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-10-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/5/51/Beat-2048-Step-11-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-11-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/b/b8/Beat-2048-Step-12-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-12-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/1/18/Beat-2048-Step-13-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-13-Version-4.jpg.webp\",\r\n];\r\nexport const Stars = () => {\r\n  return (\r\n    <div className=\"stars\">\r\n    \r\n      <div className=\"cards\" >\r\n      \r\n        <section className=\"card card2\">\r\n          <img src={images[0]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 1</h3>\r\n            <p>{data[0]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[1]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 2</h3>\r\n            <p>{data[1]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card2\" data-aos=\"fade-right\">\r\n          <img src={images[2]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 3</h3>\r\n            <p>{data[2]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[3]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 4</h3>\r\n            <p>{data[3]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card2\" data-aos=\"fade-right\">\r\n          <img src={images[4]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 5</h3>\r\n            <p>{data[4]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[5]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 6</h3>\r\n            <p>{data[5]}</p>\r\n          </div>\r\n        </section>\r\n      \r\n        <button className=\"butstar\">\r\n          \r\n            <Link style={{color:\"white\",textDecoration:\"none\"}} to=\"/game\">\r\n            Proceed To Game\r\n            </Link>\r\n        </button>\r\n      \r\n       \r\n      \r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Details from \"./Details\";\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\n\r\nconst breakPoints = [\r\n  { width: 1, itemsToShow: 1 },\r\n  { width: 550, itemsToShow: 1 },\r\n  { width: 768, itemsToShow: 1 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: \"100vh\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      flexDirection: \"column\",\r\n    }\r\n  }\r\n  })\r\n)\r\nconst data = [\r\n  \"Swipe the screen up, down, left, or right to move all number tiles in that direction. Each tile moves in that direction until it hits the wall or another tile.(Use your arrow keys in the computer version).Each time you make a move, a new 2 or 4 tile appears in an empty spot in a row or column that was moved last move.\",\r\n  \"Try to get to 2048. When a move causes two tiles of the same number to hit each other, they merge into one tile with a value equal to the sum of the two tiles. For instance, two 2 tiles combine into a 4. The goal is to create a tile with a value of 2048.\",\r\n  \"Pause and look ahead. It's easy to get sucked into the game and make moves as quickly as possible. If you want a better shot at winning, fight this impulse and only make a move when you're ready. Look ahead and try to imagine how the board will look after you make the next move, or at least what will happen to a few important tiles.\",\r\n  \"Focus on a corner. A common strategy among players is to build up a high number in one corner. It doesn't matter what corner you pick, but once you pick, stick with it.This tactic works best when the corner is part of a row you keep permanently filled. This lets you move the tiles left to right without dislodging your high-value tile.\",\r\n  \"Take opportunities to merge multiple tiles. If you see a long row of similar tiles, it's usually a good idea to combine them all and give yourself more room on the board.Combine the early tiles into a 16 or 32, and put it in a corner. The goal of this method is to keep this tile in place for as long as possible, gradually building it higher and higher\",\r\n  \"Try alternate tapping up and right. One basic approach is to alternate tapping up and right until no squares are moving. Tap left when this happens, then go back to alternating up and right. This won't guarantee you a win - in fact, it usually won't get you there. However, it can get you a fairly high score, and it's a quick way to try to beat your previous record.\",\r\n];\r\n\r\nconst images = [\r\n  \"https://www.wikihow.com/images/thumb/9/99/Beat-2048-Step-8-Version-5.jpg/aid4511727-v4-728px-Beat-2048-Step-8-Version-5.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/e/ef/Beat-2048-Step-9-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-9-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/0/09/Beat-2048-Step-10-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-10-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/5/51/Beat-2048-Step-11-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-11-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/b/b8/Beat-2048-Step-12-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-12-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/1/18/Beat-2048-Step-13-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-13-Version-4.jpg.webp\",\r\n];\r\nconst PopUp = () => {\r\n  // handleClick = () => {\r\n  //   this.props.toggle();\r\n  // };\r\n\r\n    const classes = useStyles();\r\n    return (\r\n      <div\r\n      className={classes.root}\r\n        id=\"about\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          // marginTop:\"50px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <h1>&nbsp;</h1>\r\n        <Carousel\r\n          style={{ width: \"1000px\",  margin: \"25px\" }}\r\n          breakPoints={breakPoints}\r\n        >\r\n          {[...Array(6)].map((_, index) => {\r\n            return (\r\n              <div key={index}>\r\n                <Details image={images[index]} data={data[index]} i={index} />\r\n              </div>\r\n            );\r\n          })}\r\n        </Carousel>\r\n        <Button\r\n          style={{ margin: \"10px\",  fontSize:\"1.5rem\" ,backgroundColor:\"rgb(248, 214, 246)\"}}\r\n          variant=\"contained\"  \r\n        >Proceed To Game</Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default PopUp;\r\n","import React, { useEffect } from 'react';\r\nimport {BrowserRouter , Switch, Route} from \"react-router-dom\"\r\nimport Start from \"../src/components/start\"\r\nimport App from \"../src/App\"\r\nimport Game from './components/Game';\r\nimport { Stars } from './components/stars';\r\nimport { StarsSharp } from '@material-ui/icons';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n\r\nconst Routes=()=>{\r\n    useEffect(()=>{\r\n        AOS.init({\r\n            offset: 400, // offset (in px) from the original trigger point\r\n            delay: 0, // values from 0 to 3000, with step 50ms\r\n            duration: 1000 // values from 0 to 3000, with step 50ms\r\n          });\r\n    },[]) \r\n    return(\r\n        <BrowserRouter>\r\n        <Switch>\r\n            <Route path=\"/Enigma_2048\" exact component={Start}/>\r\n            <Route path=\"/game\"  component={Game}/>\r\n            <Route path=\"/about\"  component={Stars}/>\r\n\r\n           \r\n          \r\n        </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Routes from './Routes';\n//import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(<Routes/>,document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}