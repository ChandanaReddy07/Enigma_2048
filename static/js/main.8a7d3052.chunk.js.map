{"version":3,"sources":["components/start.jsx","util.js","components/Toggle.js","components/use-dark-mode.js","components/use-local-storage.js","components/use-media.js","components/click_sound.mp3","components/Game.jsx","components/stars.jsx","Routes.js","index.js"],"names":["Start","className","style","marginTop","display","to","getColors","num","Toggle","darkMode","setDarkMode","type","onClick","id","checked","onChange","htmlFor","useDarkMode","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","enabledState","setEnabledState","prefersDarkMode","queries","values","defaultValue","setValue","mediaQueryLists","map","q","matchMedia","getValue","index","findIndex","mql","matches","useEffect","handler","forEach","addListener","removeListener","useMedia","enabled","element","document","body","classList","add","remove","Block","blockStyle","background","color","height","width","margin","justifyContent","alignItems","fontSize","fontWeight","InstructionsButton","padding","borderRadius","cursor","textAlign","marginRight","newGameButton","tryAgainButton","gameOverOverlay","position","left","top","Game","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","data","setData","score","setScore","best","setBest","gameOver","setGameOver","addNumber","newGrid","added","gridFull","attempts","rand1","Math","floor","random","rand2","checkIfGameOver","alert","swipeLeft","dummy","count","oldGrid","newArray","cloneDeep","i","b","slow","fast","swipeRight","oldData","length","swipeDown","swipeUp","checker","checker2","checker3","checker4","resetGame","emptyGrid","s","func","initialize","event","passive","addEventListener","removeEventListener","useEvent","sound","Audio","Sound","keyCode","play","includes","fontFamily","flex","marginLeft","overflowY","row","oneIndex","digit","textDecoration","images","Stars","src","alt","Routes","AOS","init","offset","delay","duration","path","exact","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8a7d3052.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../start.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Start = () => {\r\n  return (\r\n    <div className=\"container\" style={{marginTop:\"80px\"}}>\r\n      <div className=\"inner-container\">\r\n        <div className=\"shape\">\r\n          <div className=\"title\">\r\n            <h2>WITH ❤ BY ENIGMA TEAM</h2>\r\n            <div style={{display:\"flex\"}}>\r\n            <Link to=\"/about\" className=\"button\">\r\n              {\" \"}\r\n              INSTRUCTIONS\r\n            </Link>\r\n            <Link to=\"/game\" className=\"button\">\r\n              {\" \"}\r\n              START\r\n            </Link>\r\n            </div>\r\n           \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Start;\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useEvent = (event, handler, passive = false) => {\r\n  useEffect(() => {\r\n    // initiate the event handler\r\n    window.addEventListener(event, handler, passive);\r\n\r\n    // this will clean up the event every time the component is re-rendered\r\n    return function cleanup() {\r\n      window.removeEventListener(event, handler);\r\n    };\r\n  });\r\n};\r\n\r\nexport const getColors = (num) => {\r\n  switch (num) {\r\n    case 2:\r\n      return \"#EBDCD0\";\r\n    case 4:\r\n      return \"#E9DBBA\";\r\n    case 8:\r\n      return \"#E9A067\";\r\n    case 16:\r\n      return \"#F08151\";\r\n    case 32:\r\n      return \"#F2654F\";\r\n    case 64:\r\n      return \"#F1462C\";\r\n    case 128:\r\n      return \"#E7C65E\";\r\n    case 256:\r\n      return \"#E8C350\";\r\n    case 512:\r\n      return \"#E8BE40\";\r\n    case 1024:\r\n      return \"#E8BB31\";\r\n    case 2048:\r\n      return \"#E7B723\";\r\n    default:\r\n      return \"#C2B3A3\";\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nconst Toggle = ({ darkMode, setDarkMode }) => (\r\n  <div className=\"dark-mode-toggle\">\r\n    <button type=\"button\" onClick={() => setDarkMode(false)}>\r\n      ☀\r\n    </button>\r\n    <span className=\"toggle-control\">\r\n      <input\r\n        className=\"dmcheck\"\r\n        id=\"dmcheck\"\r\n        type=\"checkbox\"\r\n        checked={darkMode}\r\n        onChange={() => setDarkMode(!darkMode)}\r\n      />\r\n      <label htmlFor=\"dmcheck\" />\r\n    </span>\r\n    <button type=\"button\" onClick={() => setDarkMode(true)}>\r\n      ☾\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default Toggle;\r\n","import { useEffect } from \"react\";\r\nimport useLocalStorage from \"./use-local-storage\";\r\nimport useMedia from \"./use-media\";\r\n\r\nfunction useDarkMode() {\r\n  // Use our useLocalStorage hook to persist state through a page refresh.\r\n  // Read the recipe for this hook to learn more: usehooks.com/useLocalStorage\r\n  const [enabledState, setEnabledState] = useLocalStorage(\"dark-mode-enabled\");\r\n\r\n  // See if user has set a browser or OS preference for dark mode.\r\n  // The usePrefersDarkMode hook composes a useMedia hook (see code below).\r\n  const prefersDarkMode = usePrefersDarkMode();\r\n\r\n  // If enabledState is defined use it, otherwise fallback to prefersDarkMode.\r\n  // This allows user to override OS level setting on our website.\r\n  const enabled =\r\n    typeof enabledState !== \"undefined\" ? enabledState : prefersDarkMode;\r\n\r\n  // Fire off effect that add/removes dark mode class\r\n  useEffect(\r\n    () => {\r\n      const className = \"dark-mode\";\r\n      const element = window.document.body;\r\n      if (enabled) {\r\n        element.classList.add(className);\r\n      } else {\r\n        element.classList.remove(className);\r\n      }\r\n    },\r\n    [enabled] // Only re-call effect when value changes\r\n  );\r\n\r\n  // Return enabled state and setter\r\n  return [enabled, setEnabledState];\r\n}\r\n\r\n// Compose our useMedia hook to detect dark mode preference.\r\n// The API for useMedia looks a bit weird, but that's because ...\r\n// ... it was designed to support multiple media queries and return values.\r\n// Thanks to hook composition we can hide away that extra complexity!\r\n// Read the recipe for useMedia to learn more: usehooks.com/useMedia\r\nfunction usePrefersDarkMode() {\r\n  return useMedia([\"(prefers-color-scheme: dark)\"], [true], false);\r\n}\r\n\r\nexport default useDarkMode;\r\n","import { useState } from \"react\";\r\n\r\n// Code from https://usehooks.com/useLocalStorage\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return [storedValue, setValue];\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\n// Code from https://usehooks.com/useMedia\r\n\r\n// Alternate hook that accepts a single query\r\nexport default function useMedia(queries, values, defaultValue) {\r\n  // State and setter for matched value\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  // Array containing a media query list for each query\r\n  const mediaQueryLists = queries.map((q) => window.matchMedia(q));\r\n\r\n  // State update function\r\n  const getValue = () => {\r\n    // Get index of first media query that matches\r\n    const index = mediaQueryLists.findIndex((mql) => mql.matches);\r\n    // Return related value or defaultValue if none\r\n    return typeof values[index] !== \"undefined\" ? values[index] : defaultValue;\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set the initial value\r\n      setValue(getValue);\r\n\r\n      // Event listener callback\r\n      // By defining getValue outside of useEffect we ensure that it has ...\r\n      // ... current values of hook args (as this hook only run on mount/dismount).\r\n      const handler = () => setValue(getValue);\r\n\r\n      // Set a listener for each media query with above handler as callback.\r\n      mediaQueryLists.forEach((mql) => mql.addListener(handler));\r\n\r\n      // Remove listeners on cleanup\r\n      return () =>\r\n        mediaQueryLists.forEach((mql) => mql.removeListener(handler));\r\n    },\r\n    [] // Empty array ensures effect is only run on mount and unmount\r\n  );\r\n\r\n  return value;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/click_sound.c8776b00.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport cloneDeep from \"lodash.clonedeep\";\r\nimport { useEvent, getColors } from \"../util\";\r\nimport Swipe from \"react-easy-swipe\";\r\nimport Toggle from \"./Toggle\";\r\nimport useDarkMode from \"./use-dark-mode\";\r\nimport \"./toggle_styles.scss\";\r\nimport \"./game.css\";\r\nimport Sound from \"./click_sound.mp3\"\r\nimport {Link} from \"react-router-dom\"\r\nfunction Game() {\r\n  const UP_ARROW = 38;\r\n  const DOWN_ARROW = 40;\r\n  const LEFT_ARROW = 37;\r\n  const RIGHT_ARROW = 39;\r\n  const [data, setData] = useState([\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0],\r\n    [0, 0, 0, 0]\r\n  ]);\r\n  let [score, setScore] = useState(() => {\r\n    return localStorage.getItem(\"score\") || 0;\r\n  });\r\n  let [best, setBest] = useState(() => {\r\n    return localStorage.getItem(\"best\") || 0;\r\n  });\r\n\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  // Initialize\r\n  const func = () => {\r\n    let arr = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0]\r\n    ];\r\n    let s = JSON.parse(localStorage.getItem(\"grid\"));\r\n    if (!s) {\r\n      s = arr;\r\n    }\r\n    return s;\r\n  };\r\n\r\n  const initialize = () => {\r\n    // console.log(\"CALLING INITIALIZE\");\r\n    let newGrid = cloneDeep(data);\r\n    // console.log(newGrid);\r\n    setScore(0);\r\n    addNumber(newGrid);\r\n    // console.table(newGrid);\r\n    addNumber(newGrid);\r\n\r\n    // console.table(newGrid);\r\n  };\r\n\r\n  // AddNumber - Add an item\r\n  const addNumber = (newGrid) => {\r\n    let added = false;\r\n    let gridFull = false;\r\n    let attempts = 0;\r\n    while (!added) {\r\n      if (gridFull) {\r\n        break;\r\n      }\r\n\r\n      let rand1 = Math.floor(Math.random() * 4);\r\n      let rand2 = Math.floor(Math.random() * 4);\r\n      attempts++;\r\n      if (newGrid[rand1][rand2] === 0) {\r\n        newGrid[rand1][rand2] = Math.random() > 0.5 ? 2 : 4;\r\n        added = true;\r\n      }\r\n      if (attempts > 50) {\r\n        gridFull = true;\r\n        let gameOverr = checkIfGameOver();\r\n        if (gameOverr) {\r\n          alert(\"game over\");\r\n        }\r\n      }\r\n    }\r\n    // setData(newGrid);\r\n    // localStorage.setItem(\"grid\", JSON.stringify(newGrid));\r\n  };\r\n  // Swipe Left\r\n  const swipeLeft = (dummy) => {\r\n    // console.log(\"swipe left\");\r\n    let count = 0;\r\n    let oldGrid = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      let b = newArray[i];\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast++;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            count += b[slow];\r\n            b[fast] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(oldGrid) !== JSON.stringify(newArray)) {\r\n      addNumber(newArray);\r\n    }\r\n    if (dummy) {\r\n      return newArray;\r\n    }\r\n    setScore((score = +score + count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(newArray));\r\n    setData(newArray);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeRight = (dummy) => {\r\n    // console.log(\"swipe right\");\r\n    let count = 0;\r\n    let oldData = data;\r\n    let newArray = cloneDeep(data);\r\n\r\n    for (let i = 3; i >= 0; i--) {\r\n      let b = newArray[i];\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n        if (b[slow] === 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] === 0 && b[fast] !== 0) {\r\n          b[slow] = b[fast];\r\n          b[fast] = 0;\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] === 0) {\r\n          fast--;\r\n        } else if (b[slow] !== 0 && b[fast] !== 0) {\r\n          if (b[slow] === b[fast]) {\r\n            b[slow] = b[slow] + b[fast];\r\n            count += b[slow];\r\n            b[fast] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(newArray) !== JSON.stringify(oldData)) {\r\n      addNumber(newArray);\r\n    }\r\n    if (dummy) {\r\n      return newArray;\r\n    }\r\n    setScore((score = +score + count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(newArray));\r\n    setData(newArray);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeDown = (dummy) => {\r\n    // console.log(\"swipe down\");\r\n    // console.log(data);\r\n    let count = 0;\r\n    let b = cloneDeep(data);\r\n    let oldData = JSON.parse(JSON.stringify(data));\r\n    for (let i = 3; i >= 0; i--) {\r\n      let slow = b.length - 1;\r\n      let fast = slow - 1;\r\n      while (slow > 0) {\r\n        if (fast === -1) {\r\n          fast = slow - 1;\r\n          slow--;\r\n          continue;\r\n        }\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast--;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            count += b[slow][i];\r\n            b[fast][i] = 0;\r\n            fast = slow - 1;\r\n            slow--;\r\n          } else {\r\n            slow--;\r\n            fast = slow - 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(b) !== JSON.stringify(oldData)) {\r\n      addNumber(b);\r\n    }\r\n    if (dummy) return b;\r\n    setScore((score = +score + count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(b));\r\n    setData(b);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  const swipeUp = (dummy) => {\r\n    let count = 0;\r\n    let b = cloneDeep(data);\r\n    let oldData = data;\r\n    for (let i = 0; i < 4; i++) {\r\n      let slow = 0;\r\n      let fast = 1;\r\n      while (slow < 4) {\r\n        if (fast === 4) {\r\n          fast = slow + 1;\r\n          slow++;\r\n          continue;\r\n        }\r\n        if (b[slow][i] === 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] === 0 && b[fast][i] !== 0) {\r\n          b[slow][i] = b[fast][i];\r\n          b[fast][i] = 0;\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] === 0) {\r\n          fast++;\r\n        } else if (b[slow][i] !== 0 && b[fast][i] !== 0) {\r\n          if (b[slow][i] === b[fast][i]) {\r\n            b[slow][i] = b[slow][i] + b[fast][i];\r\n            count += b[slow][i];\r\n            // console.log(count);\r\n            b[fast][i] = 0;\r\n            fast = slow + 1;\r\n            slow++;\r\n          } else {\r\n            slow++;\r\n            fast = slow + 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (JSON.stringify(oldData) !== JSON.stringify(b)) {\r\n      addNumber(b);\r\n    }\r\n    if (dummy) {\r\n      return b;\r\n    }\r\n    setScore((score = +score + count));\r\n    localStorage.setItem(\"score\", score);\r\n    localStorage.setItem(\"grid\", JSON.stringify(b));\r\n    setData(b);\r\n    if (score > localStorage.getItem(\"best\")) {\r\n      setBest((best = score));\r\n      localStorage.setItem(\"best\", best);\r\n    }\r\n  };\r\n\r\n  // Check Gameover\r\n  const checkIfGameOver = () => {\r\n    // console.log(\"CHECKING GAME OVER\");\r\n    // let original = cloneDeep(data);\r\n    let checker = swipeLeft(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker)) {\r\n      return false;\r\n    }\r\n\r\n    let checker2 = swipeDown(true);\r\n    // console.log(\"CHECKER DOWN\");\r\n    // console.table(data);\r\n    // console.table(checker2);\r\n    if (JSON.stringify(data) !== JSON.stringify(checker2)) {\r\n      return false;\r\n    }\r\n\r\n    let checker3 = swipeRight(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker3)) {\r\n      return false;\r\n    }\r\n\r\n    let checker4 = swipeUp(true);\r\n\r\n    if (JSON.stringify(data) !== JSON.stringify(checker4)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n  // Reset\r\n  const resetGame = () => {\r\n    setGameOver(false);\r\n    const emptyGrid = [\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0],\r\n      [0, 0, 0, 0]\r\n    ];\r\n    setScore(0);\r\n    setData(emptyGrid);\r\n    addNumber(emptyGrid);\r\n    addNumber(emptyGrid);\r\n    setData(emptyGrid);\r\n    localStorage.setItem(\"score\", 0);\r\n    localStorage.setItem(\"grid\", JSON.stringify(emptyGrid));\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (gameOver) {\r\n      return;\r\n    }\r\n    let sound = new Audio(Sound)\r\n    // console.log(event.keyCode);\r\n    switch (event.keyCode) {\r\n      case UP_ARROW:\r\n        // alert(\"up\");\r\n        // console.log(event.keyCode, \"up\");\r\n        swipeUp();\r\n        sound.play();\r\n        // console.table(data);\r\n        break;\r\n      case DOWN_ARROW:\r\n        // console.table(data);\r\n        // console.log(event.keyCode, \"down\");\r\n        swipeDown();\r\n        sound.play();\r\n        // console.table(data);\r\n        break;\r\n      case LEFT_ARROW:\r\n        // console.log(event.keyCode, \"left\");\r\n        // console.table(data);\r\n        swipeLeft();\r\n        sound.play();\r\n        // console.table(data);\r\n        break;\r\n      case RIGHT_ARROW:\r\n        // console.log(event.keyCode, \"right\");\r\n        // console.table(data);\r\n        swipeRight();\r\n        sound.play();\r\n        // console.table(data);\r\n        break;\r\n      default:\r\n        // console.log(\"def\");\r\n        break;\r\n    }\r\n\r\n    if (\r\n      [RIGHT_ARROW, UP_ARROW, LEFT_ARROW, DOWN_ARROW].includes(event.keyCode)\r\n    ) {\r\n      let gameOverr = checkIfGameOver();\r\n      if (gameOverr) {\r\n        setGameOver(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let s = JSON.parse(localStorage.getItem(\"grid\"));\r\n    // console.log(s);\r\n    if (!s) {\r\n      // console.log(\"init\");\r\n      initialize();\r\n    } else {\r\n      // console.log(\"func\", s);\r\n      setData(func());\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const [darkMode, setDarkMode] = useDarkMode();\r\n\r\n  // This is a custom function\r\n  useEvent(\"keydown\", handleKeyDown);\r\n\r\n  return (\r\n    <div className=\"Game\">\r\n      <div className=\"navbar\" style={{marginTop:\"80px\"}}>\r\n        <Toggle darkMode={darkMode} setDarkMode={setDarkMode} />\r\n      </div>\r\n      <div>\r\n        <div\r\n          style={{\r\n            width: 345,\r\n            margin: \"auto\",\r\n            marginTop: 30\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <div\r\n              style={{\r\n                fontFamily: \"sans-serif\",\r\n                flex: 1,\r\n                fontWeight: \"700\",\r\n                fontSize: 60,\r\n                color: \"#776e65\"\r\n              }}\r\n            >\r\n              2048\r\n            </div>\r\n            <div\r\n              className=\"score-container\"\r\n              style={{\r\n                marginLeft: \"100px\"\r\n              }}\r\n            >\r\n              {score}\r\n            </div>\r\n            <div\r\n              className=\"best-container\"\r\n              style={{\r\n                marginLeft: \"20px\"\r\n              }}\r\n            >\r\n              {best}\r\n            </div>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n                marginTop: \"auto\"\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              background: \"#AD9D8F\",\r\n              width: \"max-content\",\r\n              height: \"max-content\",\r\n              margin: \"auto\",\r\n              padding: 5,\r\n              borderRadius: 5,\r\n              marginTop: 10,\r\n              position: \"relative\"\r\n            }}\r\n          >\r\n            {gameOver && (\r\n              <div style={style.gameOverOverlay}>\r\n                <div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: 30,\r\n                      fontFamily: \"sans-serif\",\r\n                      fontWeight: \"900\",\r\n                      color: \"#776E65\"\r\n                    }}\r\n                  >\r\n                    Game Over\r\n                  </div>\r\n                  <div>\r\n                    <div\r\n                      style={{\r\n                        flex: 1,\r\n                        marginTop: \"auto\"\r\n                      }}\r\n                    >\r\n                      <div onClick={resetGame} style={style.tryAgainButton}>\r\n                        Try Again\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            <Swipe\r\n              // onSwipeDown={() => {\r\n              //   swipeDown();\r\n              // }}\r\n              // onSwipeLeft={() => swipeLeft()}\r\n              // onSwipeRight={() => swipeRight()}\r\n              // onSwipeUp={() => swipeUp()}\r\n              style={{ overflowY: \"hidden\" }}\r\n            >\r\n              {data.map((row, oneIndex) => {\r\n                return (\r\n                  <div style={{ display: \"flex\" }} key={oneIndex}>\r\n                    {row.map((digit, index) => (\r\n                      <Block num={digit} key={index} />\r\n                    ))}\r\n                  </div>\r\n                );\r\n              })}\r\n            </Swipe>\r\n          </div>\r\n\r\n          <div style={{ width: \"inherit\" }}>\r\n            <p className=\"game-explanation\">\r\n              Use your <strong>arrow keys</strong> to move the tiles. When two\r\n              tiles with the same number touch, they{\" \"}\r\n              <strong>merge into one!</strong>\r\n            </p>\r\n          </div>\r\n          <div className=\"Button__manager\">\r\n            <div  style={style.InstructionsButton}>\r\n              <Link to=\"/about\" style={{textDecoration:\"none\",color:\"white\"}}>\r\n              INSTRUCTIONS\r\n              </Link>\r\n\r\n            \r\n            </div>\r\n            <div onClick={resetGame} style={style.newGameButton}>\r\n              NEW GAME\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Block = ({ num }) => {\r\n  const { blockStyle } = style;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        ...blockStyle,\r\n        background: getColors(num),\r\n        color: num === 2 || num === 4 ? \"#645B52\" : \"#F7F4EF\"\r\n      }}\r\n    >\r\n      {num !== 0 ? num : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst style = {\r\n  blockStyle: {\r\n    height: 80,\r\n    width: 80,\r\n    background: \"lightgray\",\r\n    margin: 3,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: 45,\r\n    fontWeight: \"800\",\r\n    color: \"white\"\r\n  },\r\n  InstructionsButton: {\r\n    padding: 10,\r\n    display: \"inline-block\",\r\n    background: \"#846F5B\",\r\n    color: \"#F8F5F0\",\r\n    width: 120,\r\n    borderRadius: 7,\r\n    fontWeight: \"900\",\r\n    cursor: \"pointer\",\r\n    textAlign: \"center\",\r\n    marginRight: 20\r\n  },\r\n  newGameButton: {\r\n    padding: 10,\r\n    background: \"#846F5B\",\r\n    display: \"inline-block\",\r\n    color: \"#F8F5F0\",\r\n    width: 95,\r\n    borderRadius: 7,\r\n    fontWeight: \"900\",\r\n    cursor: \"pointer\",\r\n    textAlign: \"center\"\r\n  },\r\n  tryAgainButton: {\r\n    padding: 10,\r\n    background: \"#846F5B\",\r\n    color: \"#F8F5F0\",\r\n    width: 80,\r\n    borderRadius: 7,\r\n    fontWeight: \"900\",\r\n    cursor: \"pointer\",\r\n    margin: \"auto\",\r\n    marginTop: 20\r\n  },\r\n  gameOverOverlay: {\r\n    position: \"absolute\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    left: 0,\r\n    top: 0,\r\n    borderRadius: 5,\r\n    background: \"rgba(238,228,218,.5)\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  }\r\n};\r\n\r\nexport default Game;\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nimport \"./stars.css\";\r\n\r\nconst data = [\r\n  \"Swipe the screen up, down, left, or right to move all number tiles in that direction. Each tile moves in that direction until it hits the wall or another tile.(Use your arrow keys in the computer version).Each time you make a move, a new 2 or 4 tile appears in an empty spot in a row or column that was moved last move.\",\r\n  \"Try to get to 2048. When a move causes two tiles of the same number to hit each other, they merge into one tile with a value equal to the sum of the two tiles. For instance, two 2 tiles combine into a 4. The goal is to create a tile with a value of 2048.\",\r\n  \"Pause and look ahead. It's easy to get sucked into the game and make moves as quickly as possible. If you want a better shot at winning, fight this impulse and only make a move when you're ready. Look ahead and try to imagine how the board will look after you make the next move, or at least what will happen to a few important tiles.\",\r\n  \"Focus on a corner. A common strategy among players is to build up a high number in one corner. It doesn't matter what corner you pick, but once you pick, stick with it.This tactic works best when the corner is part of a row you keep permanently filled. This lets you move the tiles left to right without dislodging your high-value tile.\",\r\n  \"Take opportunities to merge multiple tiles. If you see a long row of similar tiles, it's usually a good idea to combine them all and give yourself more room on the board.Combine the early tiles into a 16 or 32, and put it in a corner. The goal of this method is to keep this tile in place for as long as possible, gradually building it higher and higher\",\r\n  \"Try alternate tapping up and right. One basic approach is to alternate tapping up and right until no squares are moving. Tap left when this happens, then go back to alternating up and right. This won't guarantee you a win - in fact, it usually won't get you there. However, it can get you a fairly high score, and it's a quick way to try to beat your previous record.\",\r\n];\r\n\r\nconst images = [\r\n  \"https://www.wikihow.com/images/thumb/9/99/Beat-2048-Step-8-Version-5.jpg/aid4511727-v4-728px-Beat-2048-Step-8-Version-5.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/e/ef/Beat-2048-Step-9-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-9-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/0/09/Beat-2048-Step-10-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-10-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/5/51/Beat-2048-Step-11-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-11-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/b/b8/Beat-2048-Step-12-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-12-Version-4.jpg.webp\",\r\n  \"https://www.wikihow.com/images/thumb/1/18/Beat-2048-Step-13-Version-4.jpg/aid4511727-v4-728px-Beat-2048-Step-13-Version-4.jpg.webp\",\r\n];\r\nexport const Stars = () => {\r\n  return (\r\n    <div className=\"stars\">\r\n    \r\n      <div className=\"cards\" >\r\n      \r\n        <section className=\"card card2\">\r\n          <img src={images[0]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 1</h3>\r\n            <p>{data[0]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[1]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 2</h3>\r\n            <p>{data[1]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card2\" data-aos=\"fade-right\">\r\n          <img src={images[2]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 3</h3>\r\n            <p>{data[2]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[3]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 4</h3>\r\n            <p>{data[3]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card2\" data-aos=\"fade-right\">\r\n          <img src={images[4]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 5</h3>\r\n            <p>{data[4]}</p>\r\n          </div>\r\n        </section>\r\n        <section className=\"card card1\" data-aos=\"fade-left\">\r\n          <img src={images[5]} alt=\"\" />\r\n          <div>\r\n            <h3>Step 6</h3>\r\n            <p>{data[5]}</p>\r\n          </div>\r\n        </section>\r\n      \r\n        <button className=\"butstar\">\r\n          \r\n            <Link style={{color:\"white\",textDecoration:\"none\"}} to=\"/game\">\r\n            Proceed To Game\r\n            </Link>\r\n        </button>\r\n      \r\n       \r\n      \r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport {BrowserRouter , Switch, Route,HashRouter} from \"react-router-dom\"\r\nimport Start from \"../src/components/start\"\r\nimport App from \"../src/App\"\r\nimport Game from './components/Game';\r\nimport { Stars } from './components/stars';\r\nimport { StarsSharp } from '@material-ui/icons';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n\r\n\r\nconst Routes=()=>{\r\n    useEffect(()=>{\r\n        AOS.init({\r\n            offset: 400, // offset (in px) from the original trigger point\r\n            delay: 0, // values from 0 to 3000, with step 50ms\r\n            duration: 1000 // values from 0 to 3000, with step 50ms\r\n          });\r\n    },[]) \r\n    return(\r\n        <HashRouter>\r\n        \r\n       \r\n            <Route path=\"/\" exact component={Start}/>\r\n            <Route path=\"/game\" exact component={Game}/>\r\n            <Route path=\"/about\" exact component={Stars}/>\r\n\r\n       \r\n      \r\n        </HashRouter>\r\n    );\r\n}\r\nexport default Routes;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Routes from './Routes';\n//import reportWebVitals from './reportWebVitals';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(<Routes/>,document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}